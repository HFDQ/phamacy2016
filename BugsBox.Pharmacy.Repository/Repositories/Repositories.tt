<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ assembly name="$(SolutionDir)\\_output\\_temp\\BugsBox.Pharmacy.Models\\BugsBox.Pharmacy.Models.dll" #> 
<#@ assembly name="$(SolutionDir)\\_output\\_temp\\BugsBox.Pharmacy.Models\\BugsBox.Application.Core.dll" #> 
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Runtime.InteropServices" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Data.Entity" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #> 
<#@ import namespace="System.Xml" #>
<#@ import namespace="BugsBox.Pharmacy.Models" #>  

 


<#@ output extension=".cs" #>
<#
string entityAssemblyFullPath="$(SolutionDir)\\_output\\_temp\\BugsBox.Pharmacy.Models\\BugsBox.Pharmacy.Models.dll";
//public DbSet<Announcement> Announcements { get; set; }
string  dbSetPropertyFormat="public DbSet<{0}> {0}s { get; set; }";
Type EntityType=typeof(Entity);
//Type BaseUnitType=typeof(BaseUnit);
Assembly assembly=EntityType.Assembly;
string baseEntityTypeName="BugsBox.Pharmacy.Models";
var entityTypes=assembly.GetTypes()
.Where(t =>t!=typeof(PharmacyLicense)&& !t.IsAbstract&&(t.BaseType==EntityType||t.BaseType==typeof(BaseUnit)||t.BaseType==typeof(PharmacyLicense))).ToList(); 
#> 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using BugsBox.Application.Core;
using BugsBox.Application.Core.CF;
using BugsBox.Common;
using BugsBox.Pharmacy.Models; 
namespace BugsBox.Pharmacy.Repository
{
	//此代码IRepositories.tt 
	<#
	foreach (Type entity in entityTypes)
	{
		
	#> 
	/// <summary>
    /// <#= EntityExtensions.GetDescription(entity) #>仓储实现
    /// </summary>
    public partial class <#= entity.Name #>Repository :CFRepository<<#= entity.Name #>>,I<#= entity.Name #>Repository
    { 
		 public RepositoryProvider RepositoryProvider { get; set; }
		 public <#= entity.Name #>Repository(Db db)
            : base(db)
        { 
        }
	}
   <#}#>

}
 
 