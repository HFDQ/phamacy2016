<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ assembly name="$(SolutionDir)..\\_output\\_temp\\BugsBox.Pharmacy.Models\\BugsBox.Pharmacy.Models.dll" #> 
<#@ assembly name="$(SolutionDir)..\\_output\\_temp\\BugsBox.Pharmacy.Models\\BugsBox.Application.Core.dll" #> 
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Runtime.InteropServices" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Data.Entity" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #> 
<#@ import namespace="System.Xml" #>
<#@ import namespace="BugsBox.Pharmacy.Models" #>   
<#@ output extension=".cs" #>
<#
Type EntityType=typeof(Entity);
//Type BaseUnitType=typeof(BaseUnit);
Assembly assembly=EntityType.Assembly;
string baseEntityTypeName="BugsBox.Pharmacy.Models";
var entityTypes=assembly.GetTypes()
.Where(t =>t!=typeof(PharmacyLicense)&& !t.IsAbstract&&(t.BaseType==EntityType||t.BaseType==typeof(BaseUnit)||t.BaseType==typeof(PharmacyLicense))).ToList(); 
#>

using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using BugsBox.Application.Core;
using BugsBox.Pharmacy.Models;
using System.ComponentModel;
using BugsBox.Pharmacy.Repository;
 
namespace BugsBox.Pharmacy.BusinessHandlers
{
	
	<#foreach (Type entity in entityTypes){
		
	#>
		
	/// <summary>
	/// <#= EntityExtensions.GetDescription(entity) #>的业务逻辑处理 
	/// </summary>
	[Description("<#= EntityExtensions.GetDescription(entity) #>的业务逻辑处理")]
	public partial class <#=entity.Name#>BusinessHandler : BaseBusinessHandler<<#=entity.Name#>>
    {   
        public <#=entity.Name#>BusinessHandler(RepositoryProvider repositoryProvider,IConnectedInfoProvider connectedInfoProvider)
            : base(repositoryProvider.<#=entity.Name#>Repository,repositoryProvider,connectedInfoProvider)
        {
		    
        }
    }
	
    <#}#>
}
